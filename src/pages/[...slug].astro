---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Utterance from '../components/Utterance.astro';
import { ToC } from '../components/ToC'
import { getReadingTime } from '../lib/readingTime';

export async function getStaticPaths() {
   const posts = await getCollection('blog');
   return posts.map((post) => ({
     params: { slug: post.slug },
     props: post,
   }));
 }
type Props = CollectionEntry<'blog'>;

const post  = Astro.props;
const { data: { title, description, heroImage, pubDate, updatedDate }, body } = post;
const { Content, headings } = await post.render();
const readingTime = getReadingTime(body);
---

<Layout title={title} description={description} heroImage={heroImage}>
  <img id="hero" src={heroImage}/>
  <h1 id="title">{title}</h1>
  <div id="time">
    <time>{pubDate.toLocaleDateString('ko-KR', { year: 'numeric', month: 'long', day: 'numeric' })}</time><span> · {readingTime}분</span>
  </div>
  {
    updatedDate && (
      <div>
        Last updated on <time>{updatedDate}</time>
      </div>
    )
  }
  <ToC headings={headings} />
  <hr />
  <Content />
  <Utterance />
</Layout>

<style lang="scss">
  #hero {
    width: 100%;
    max-height: 250px;
    object-fit: cover;
    object-position: center;
    margin-bottom: 16px;
  }
  
  #title {
    font-size: 2em;
    margin: 0;
    color: inherit; 
  }
  html.dark {
    #title {
      color: inherit;
    }
  }

  hr {
    height: 1px;
    width: 50%;
    border: none;
    margin: 50px auto;
    background-color: #bbb;
  }
  
  html.dark {
    hr {
      background-color: #555;
    }
  }
</style>
